name: 'Deploy Firebase Services'
on:
  push:
    tags:
      - 'v*.*.*'

env:
  PROJECT_ID: the-easy-link

jobs:
  build:
    name: 'Build'
    uses: ./.github/workflows/build-sveltekit.yml

  hosting:
    name: 'Deploy Hosting'
    runs-on: ubuntu-latest
    needs: build
    outputs:
      url: ${{ steps.firebase-deploy.outputs.details_url }}
    steps:
      - uses: actions/checkout@v4

      - name: 'Download build artifact'
        uses: actions/download-artifact@v4
        with:
          name: 'build'
          path: './public'

      - name: 'Deploy to Firebase Hosting'
        id: firebase-deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ env.PROJECT_ID }}
          channelId: live

  firestore:
    name: 'Deploy Firestore'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            firebase.json
            firestore.rules
            firestore.indexes.json

      - name: 'Install Firebase CLI'
        run: npm install -g firebase-tools
        shell: bash

      - name: 'Authenticate Firebase CLI'
        uses: google-github-actions/auth@v3
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'

      - name: 'Deploy Security Rules'
        if: needs.changes.outputs.firestore-rules == 'true'
        run: firebase deploy --only firestore:rules --non-interactive --project ${{ env.PROJECT_ID }}
